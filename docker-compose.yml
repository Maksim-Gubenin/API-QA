services:
  db:
    image: postgres:15
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - qa_network

  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - qa_network

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
    depends_on:
      - web
    networks:
      - qa_network

volumes:
  postgres_data:
  static_volume:

networks:
  qa_network:
    driver: bridge